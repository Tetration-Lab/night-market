/* tslint:disable */
/* eslint-disable */
export function __wbg_sparsemerkletree_free(a: number): void;
export function __wbg_get_sparsemerkletree_latest_index(a: number): number;
export function __wbg_set_sparsemerkletree_latest_index(a: number, b: number): void;
export function sparsemerkletree_new(): number;
export function sparsemerkletree_root(a: number, b: number): void;
export function sparsemerkletree_insert_batch(a: number, b: number): void;
export function __wbg_account_free(a: number): void;
export function __wbg_get_account_index(a: number, b: number): void;
export function __wbg_set_account_index(a: number, b: number, c: number): void;
export function account__new(a: number, b: number): number;
export function account_fromString(a: number, b: number): number;
export function account_toString(a: number, b: number): void;
export function account_updateIndex(a: number, b: number, c: number): void;
export function account_updateIndexFromString(a: number, b: number, c: number, d: number): void;
export function protocol_deposit_withdraw(a: number, b: number, c: number, d: number, e: number): number;
export function protocol_swap(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function init(): void;
export function __wbg_protocol_free(a: number): void;
export function __wbg_wbg_rayon_poolbuilder_free(a: number): void;
export function wbg_rayon_poolbuilder_numThreads(a: number): number;
export function wbg_rayon_poolbuilder_receiver(a: number): number;
export function wbg_rayon_poolbuilder_build(a: number): void;
export function wbg_rayon_start_worker(a: number): void;
export function initThreadPool(a: number): number;
export function interface_version_8(): void;
export function allocate(a: number): number;
export function deallocate(a: number): void;
export function requires_stargate(): void;
export function requires_iterator(): void;
export const memory: WebAssembly.Memory;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __wbindgen_thread_destroy(a: number, b: number): void;
export function __wbindgen_start(): void;
